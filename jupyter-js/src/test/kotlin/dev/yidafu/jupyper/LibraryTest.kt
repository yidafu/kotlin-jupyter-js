/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package dev.yidafu.jupyper

import kotlinx.serialization.encodeToString
import kotlinx.serialization.json.Json
import kotlinx.serialization.json.buildJsonObject
import org.jetbrains.kotlinx.jupyter.api.JSON
import org.jetbrains.kotlinx.jupyter.api.htmlResult
import org.jetbrains.kotlinx.jupyter.testkit.JupyterReplTestCase
import org.jetbrains.kotlinx.jupyter.testkit.ReplProvider
import kotlin.test.Test
import kotlin.test.assertTrue

class LibraryTest : JupyterReplTestCase(
    ReplProvider.withDefaultClasspathResolution(),
) {

    @Test
    fun `test Randable result`() {
        println(Json.encodeToString(htmlResult("<div>TEXT</div>").toJson()))
        println(Json.encodeToString(htmlResult("<div>TEXT</div>", true).toJson()))
        println(Json.encodeToString(JSON(buildJsonObject { }).toJson()))
    }

    @Test
    fun someLibraryMethodReturnsTrue() {
        exec(
            """
            USE {
                addCodePreprocessor(dev.yidafu.jupyper.JavaScriptMagicCodeProcessor(this.notebook));
            }
            """.trimIndent(),
        )
        exec(
            """
            val foo = "string"
        """.trimIndent(),
        )
        exec(
            """
            %js
            import { foo } from "@jupyter";

            var b = 345

            console.log(b)
        """.trimIndent(),
        )
//        val classUnderTest = KotlinKernelJsSupport()

        assertTrue(true, "someLibraryMethod should return 'true'")
    }
}
